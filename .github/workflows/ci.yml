name: ci
on:
  pull_request:
  push:
    branches:
    - master
jobs:
  test:
    name: test
    env:
      # For some builds, we use cross to test on 32-bit and big-endian
      # systems.
      CARGO: cargo
      # When CARGO is set to CROSS, this is set to `--target matrix.target`.
      TARGET_FLAGS:
      # When CARGO is set to CROSS, TARGET_DIR includes matrix.target.
      TARGET_DIR: ./target
      # Emit backtraces on panics.
      RUST_BACKTRACE: 1
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build:
        - stable
        - macos
        include:
        - build: stable
          os: ubuntu-18.04
          rust: stable
        - build: macos
          os: macos-latest
          rust: nightly
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install packages (Ubuntu)
      if: matrix.os == 'ubuntu-18.04'
      run: |
        bin/install-dependencies-debian.sh

    - name: Install packages (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        bin/install-dependencies-macos.sh

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        profile: minimal
        override: true

    - name: Show command used for Cargo
      run: |
        echo "cargo command is: ${{ env.CARGO }}"
        echo "target flag is: ${{ env.TARGET_FLAGS }}"

    - name: Build
      run: ${{ env.CARGO }} build --verbose --all ${{ env.TARGET_FLAGS }}

    - name: Run stateless Journey Tests
      run: make stateless-journey-tests

    - name: Run stateful journey tests (Ubuntu)
      if: matrix.os == 'ubuntu-18.04'
      run: |
        make lint-scripts
        make stateful-journey-tests
        make docs

  rustfmt-and-clippy:
    name: rustfmt
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        profile: minimal
        components: rustfmt,clippy
    - name: Check formatting + Clippy
      run: |
        cargo fmt --all -- --check
        cargo clippy
